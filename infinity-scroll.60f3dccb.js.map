{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAOMC,EAAeC,SAASC,cAAc,gBACtCC,EAAYF,SAASC,cAAc,YAEnCE,EAAa,IAAI,EAAAC,EAAAC,YAEjBC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAChDC,aAAc,MACdC,aAAc,M,SAGDC,I,OAAAA,EAAfJ,EAAAV,EAAA,CAAAU,EAAAK,GAAAC,MAAA,SAAAC,EAA4BC,G,IAIlBC,E,yEAHNb,EAAWc,MAAQ,E,kBAGId,EAAWe,mB,OAA5BF,EAAQG,EAAAC,KAEVjB,EAAWc,KAAOd,EAAWkB,SAAWL,EAASM,KAAKC,WACxDC,EAASC,UAAUzB,SAASC,cAAc,oBAG5CC,EAAUwB,mBACR,aACA,EAAAC,EAAAC,SAAmBZ,EAASM,KAAKO,O,gDAGnCC,QAAQC,IAAGZ,EAAAa,I,0DAfYC,MAAAC,KAAAC,WAmB3B,IAAMX,EAAW,IAAIY,sBACnB,SAACC,EAASC,GACJD,EAAQ,GAAGE,gB,SArBSxB,GAAbJ,EAAYsB,MAAAC,KAAAC,WAsBrBK,KAGJ,CACEC,KAAM,KACNC,WAAY,QACZC,UAAW,I,SAMAC,I,OAAAA,EAAfrC,EAAAV,EAAA,CAAAU,EAAAK,GAAAC,MAAA,SAAAC,EAAkCC,G,IAMtBC,E,yEALRD,EAAM8B,iBACN1C,EAAW2C,EAAI/B,EAAMgC,cAAcC,SAAsB,YAAEC,MAC3D9C,EAAWc,KAAO,E,kBAGOd,EAAWe,mB,UAEA,KAF5BF,EAAQG,EAAAC,MAEDE,KAAKO,KAAKqB,OAAY,C,uBACjC3C,EAAA4C,GAASC,OAAOC,QAAQ,4EACxBnD,EAAUoD,UAAY,GACtBvC,EAAMwC,OAAOC,Q,8BAIfjD,EAAA4C,GAASC,OAAOK,QACd,qBAA6CC,OAAxB1C,EAASM,KAAKC,UAAU,gBAG3CP,EAASM,KAAKC,WAAapB,EAAWkB,UAAQ,C,uBAChDnB,EAAUoD,WAAY,EAAA3B,EAAAC,SAAmBZ,EAASM,KAAKO,MACvDvB,EAASqD,U,2BAIXzD,EAAUoD,WAAY,EAAA3B,EAAAC,SAAmBZ,EAASM,KAAKO,MACvDvB,EAASqD,U,kDAET7B,QAAQC,IAAGZ,EAAAa,I,2DA5BgBC,MAAAC,KAAAC,WAFjCpC,EAAa6D,iBAAiB,U,SAEI7C,G,OAAnB6B,EAAkBX,MAAAC,KAAAC,c","sources":["src/js/infinity-scroll.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { PixabayAPI } from './pixabay-api';\nimport createGalleryCards from '../templates/gallery-card.hbs';\n\nconst searchFormEl = document.querySelector('.search-form');\nconst galleryEl = document.querySelector('.gallery');\n\nconst pixabayAPI = new PixabayAPI();\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nasync function loadMoreData(event) {\n    pixabayAPI.page += 1;\n\n  try {\n    const response = await pixabayAPI.getPhotosByQuery();\n\n    if (pixabayAPI.page * pixabayAPI.per_page > response.data.totalHits) {\n      observer.unobserve(document.querySelector('.target-element'));\n    }\n\n    galleryEl.insertAdjacentHTML(\n      'beforeend',\n      createGalleryCards(response.data.hits)\n    );\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst observer = new IntersectionObserver(\n  (entries, observer) => {\n    if (entries[0].isIntersecting) {\n      loadMoreData();\n    }\n  },\n  {\n    root: null,\n    rootMargin: '600px',\n    threshold: 1,\n  }\n);\n\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\n\nasync function onSearchFormSubmit(event) {\n    event.preventDefault();\n    pixabayAPI.q = event.currentTarget.elements['searchQuery'].value;\n    pixabayAPI.page = 1;\n  \n    try {\n      const response = await pixabayAPI.getPhotosByQuery();\n\n      if (response.data.hits.length === 0) {\n        Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n        galleryEl.innerHTML = '';\n        event.target.reset();\n        return;\n      }\n  \n      Notiflix.Notify.success(\n        `'Hooray! We found ${response.data.totalHits} images.'`\n      );\n  \n      if (response.data.totalHits <= pixabayAPI.per_page) {\n        galleryEl.innerHTML = createGalleryCards(response.data.hits);\n        lightbox.refresh();\n        return;\n      }\n    \n      galleryEl.innerHTML = createGalleryCards(response.data.hits);\n      lightbox.refresh();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  "],"names":["$bpxeT","parcelRequire","$3009c398e1a659a2$var$searchFormEl","document","querySelector","$3009c398e1a659a2$var$galleryEl","$3009c398e1a659a2$var$pixabayAPI","$8H72y","PixabayAPI","$3009c398e1a659a2$var$lightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","$3009c398e1a659a2$var$_loadMoreData","$2TvXO","mark","_callee","event","response","page","getPhotosByQuery","_ctx","sent","per_page","data","totalHits","$3009c398e1a659a2$var$observer","unobserve","insertAdjacentHTML","$86MAb","default","hits","console","log","t0","apply","this","arguments","IntersectionObserver","entries","observer","isIntersecting","$3009c398e1a659a2$var$loadMoreData","root","rootMargin","threshold","$3009c398e1a659a2$var$_onSearchFormSubmit","preventDefault","q","currentTarget","elements","value","length","$iU1Pc","Notify","failure","innerHTML","target","reset","success","concat","refresh","addEventListener"],"version":3,"file":"infinity-scroll.60f3dccb.js.map"}